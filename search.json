[{"path":"https://igor-sb.github.io/context/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 context authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://igor-sb.github.io/context/articles/usage.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"How to use context","text":"Usage familiar anyone used Pythons -context manager. example, iterate file line line, run function line, something result: addition context creation, %% can used store value expression left side variable name right side. used manner, type assignment returns FALSE end reached, length return value zero. useful iterating files chunks; example line line block--block case example ShortRead::FastqStreamer().","code":"# Add numbers 1, 2, 3, 4, 5 to a file set.seed(42) temp_file <- tempfile() writeLines(as.character(1:5), temp_file) numbers <- c()  with(open(temp_file) %as% f, {   while (read_line(f) %as% line) {     numbers <- c(numbers, as.integer(line))   } })  cat(\"Sum of the numbers is: \", sum(numbers), \"\\n\") #> Sum of the numbers is:  15 file.remove(temp_file) |> invisible()"},{"path":"https://igor-sb.github.io/context/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Igor Segota. Maintainer.","code":""},{"path":"https://igor-sb.github.io/context/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Segota (2022). context: Context manager R. R package version 1.0, https://igor-sb.github.io/context/.","code":"@Manual{,   title = {context: Context manager for R},   author = {Igor Segota},   year = {2022},   note = {R package version 1.0},   url = {https://igor-sb.github.io/context/}, }"},{"path":"https://igor-sb.github.io/context/index.html","id":"context","dir":"","previous_headings":"","what":"Context manager for R","title":"Context manager for R","text":"Context manager used create context: code block runs current R environment, another object temporarily created safely destroyed code block finishes running throws error. common use open file, stuff , close file connection. example: equivalent Python code:","code":"library(context)  with(open(filename) %as% f, {   x <- do_stuff(f) })  do_stuff2(x) with open(filename) as f:   x = do_stuff(f)    do_stuff2(x)"},{"path":"https://igor-sb.github.io/context/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Context manager for R","text":"can install development version context GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"igor-sb/context\")"},{"path":"https://igor-sb.github.io/context/index.html","id":"implementation","dir":"","previous_headings":"","what":"Implementation","title":"Context manager for R","text":"ContextManager S3 object created using create_context_manager() function, takes 3 arguments: on_enter: function evaluate code block. Return value function stored variable right side %% operator. on_exit: function evaluate code block completes stops. args: arguments passed on_enter function. can use create custom context managers.","code":""},{"path":"https://igor-sb.github.io/context/index.html","id":"alternative-withs","dir":"","previous_headings":"","what":"Alternative withs","title":"Context manager for R","text":"Base R function base::functions differently: creates new environment support setup teardown code. Even documentation discourages use (!). context::much similiar withr::with_* functions withr package setup teardown code. However, withr::with_* functions run code block environment somewhat different purpose, run code modified global state. find clunky inflexible use purpose. example, modify current environment variable, one needs even code wrapping (hence motivation package) use <<- assignment operator (sometimes binds variable parent, sometimes global environment).","code":""},{"path":[]},{"path":"https://igor-sb.github.io/context/index.html","id":"example-block-by-block-reading-of-fastq-files","dir":"","previous_headings":"Setting up custom context managers","what":"Example: block-by-block reading of fastq files","title":"Context manager for R","text":"Define on_enter on_exit functions: function move iterator time block read: can iterate fastq file:","code":"fastq_open <- function(file_name, n = 1e6) {   create_context_manager(     on_enter = function(file_name, n) ShortRead::FastqStreamer(file_name, n),     on_exit = function(file_connection) close(file_connection),     args = list(file_name = file_name, n = n)   ) } read_block <- function(file_connection) {   ShortRead::yield(file_connection) } fastq_file <- read_test_fastq() blocks <- list() with(fastq_open(fastq_file) %as% fq, {   while (read_block(fq) %as% block) {     blocks <- c(blocks, ShortRead::sread(block))   } })  print(blocks)  #> [[1]] #> DNAStringSet object of length 5: #>     width seq #> [1]    15 AGAATACTTCCGGCC #> [2]    15 CGTNGANCGGCGATG #> [3]    15 GACATTCTGCTGTNC #> [4]    15 GCTATCCTCGACGGC #> [5]    15 NGAAGGAGGTCTCCT"},{"path":"https://igor-sb.github.io/context/reference/create_context_manager.html","id":null,"dir":"Reference","previous_headings":"","what":"Context manager — create_context_manager","title":"Context manager — create_context_manager","text":"Context manager","code":""},{"path":"https://igor-sb.github.io/context/reference/create_context_manager.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Context manager — create_context_manager","text":"","code":"create_context_manager(on_enter, on_exit, args = NULL)"},{"path":"https://igor-sb.github.io/context/reference/create_context_manager.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Context manager — create_context_manager","text":"on_enter function run entering context on_exit function run taking actions args Optional list arguments supplied `on_enter` function.","code":""},{"path":"https://igor-sb.github.io/context/reference/create_context_manager.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Context manager — create_context_manager","text":"S3 class ContextManager","code":""},{"path":"https://igor-sb.github.io/context/reference/grapes-as-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Context manager's `as` function — %as%","title":"Context manager's `as` function — %as%","text":"Context manager's `` function","code":""},{"path":"https://igor-sb.github.io/context/reference/grapes-as-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Context manager's `as` function — %as%","text":"","code":"context %as% variables"},{"path":"https://igor-sb.github.io/context/reference/grapes-as-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Context manager's `as` function — %as%","text":"context ContextManager S3 class character string. variables Variable name use within context variable name store `context` ContextManager S3 class.","code":""},{"path":"https://igor-sb.github.io/context/reference/grapes-as-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Context manager's `as` function — %as%","text":"ContextAs S3 object  elements `context` `variable`.","code":""},{"path":"https://igor-sb.github.io/context/reference/open.html","id":null,"dir":"Reference","previous_headings":"","what":"Open file implementation using a context manager — open","title":"Open file implementation using a context manager — open","text":"Similar Python's `open()`, creates ContextManager S3 object. Intended used first (left) argument ` argument `context::()`.","code":""},{"path":"https://igor-sb.github.io/context/reference/open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open file implementation using a context manager — open","text":"","code":"open(file_name, mode = \"r\")"},{"path":"https://igor-sb.github.io/context/reference/open.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open file implementation using a context manager — open","text":"file_name File name open. mode File mode.","code":""},{"path":"https://igor-sb.github.io/context/reference/open.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open file implementation using a context manager — open","text":"S3 class ContextManager","code":""},{"path":"https://igor-sb.github.io/context/reference/read_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a single line from file connectoin — read_line","title":"Read a single line from file connectoin — read_line","text":"Read single line file connectoin","code":""},{"path":"https://igor-sb.github.io/context/reference/read_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a single line from file connectoin — read_line","text":"","code":"read_line(connection)"},{"path":"https://igor-sb.github.io/context/reference/read_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a single line from file connectoin — read_line","text":"connection File connection.","code":""},{"path":"https://igor-sb.github.io/context/reference/read_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a single line from file connectoin — read_line","text":"Character string one line file.","code":""},{"path":"https://igor-sb.github.io/context/reference/read_test_fastq.html","id":null,"dir":"Reference","previous_headings":"","what":"Path to a small simulated fastq file — read_test_fastq","title":"Path to a small simulated fastq file — read_test_fastq","text":"Path small simulated fastq file","code":""},{"path":"https://igor-sb.github.io/context/reference/read_test_fastq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path to a small simulated fastq file — read_test_fastq","text":"","code":"read_test_fastq()"},{"path":"https://igor-sb.github.io/context/reference/read_test_fastq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Path to a small simulated fastq file — read_test_fastq","text":"character vector file path.","code":""},{"path":"https://igor-sb.github.io/context/reference/with.html","id":null,"dir":"Reference","previous_headings":"","what":"Context manager's `with` function — with","title":"Context manager's `with` function — with","text":"Context manager's `` function","code":""},{"path":"https://igor-sb.github.io/context/reference/with.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Context manager's `with` function — with","text":"","code":"with(...)"},{"path":"https://igor-sb.github.io/context/reference/with.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Context manager's `with` function — with","text":"... ContextAs S3 objects, followed expression.","code":""}]
